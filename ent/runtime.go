// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"gno.land-block-indexer/ent/account"
	"gno.land-block-indexer/ent/block"
	"gno.land-block-indexer/ent/schema"
	"gno.land-block-indexer/ent/transaction"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	accountFields := schema.Account{}.Fields()
	_ = accountFields
	// accountDescToken is the schema descriptor for token field.
	accountDescToken := accountFields[1].Descriptor()
	// account.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	account.TokenValidator = accountDescToken.Validators[0].(func(string) error)
	// accountDescID is the schema descriptor for id field.
	accountDescID := accountFields[0].Descriptor()
	// account.IDValidator is a validator for the "id" field. It is called by the builders before save.
	account.IDValidator = accountDescID.Validators[0].(func(string) error)
	blockFields := schema.Block{}.Fields()
	_ = blockFields
	// blockDescHash is the schema descriptor for hash field.
	blockDescHash := blockFields[1].Descriptor()
	// block.HashValidator is a validator for the "hash" field. It is called by the builders before save.
	block.HashValidator = blockDescHash.Validators[0].(func(string) error)
	// blockDescCreatedAt is the schema descriptor for created_at field.
	blockDescCreatedAt := blockFields[5].Descriptor()
	// block.DefaultCreatedAt holds the default value on creation for the created_at field.
	block.DefaultCreatedAt = blockDescCreatedAt.Default.(func() time.Time)
	transactionFields := schema.Transaction{}.Fields()
	_ = transactionFields
	// transactionDescHash is the schema descriptor for hash field.
	transactionDescHash := transactionFields[1].Descriptor()
	// transaction.HashValidator is a validator for the "hash" field. It is called by the builders before save.
	transaction.HashValidator = transactionDescHash.Validators[0].(func(string) error)
	// transactionDescSuccess is the schema descriptor for success field.
	transactionDescSuccess := transactionFields[2].Descriptor()
	// transaction.DefaultSuccess holds the default value on creation for the success field.
	transaction.DefaultSuccess = transactionDescSuccess.Default.(bool)
	// transactionDescCreatedAt is the schema descriptor for created_at field.
	transactionDescCreatedAt := transactionFields[10].Descriptor()
	// transaction.DefaultCreatedAt holds the default value on creation for the created_at field.
	transaction.DefaultCreatedAt = transactionDescCreatedAt.Default.(time.Time)
}
