// Code generated by ent, DO NOT EDIT.

package transfer

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"gno.land-block-indexer/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldID, id))
}

// Hash applies equality check predicate on the "hash" field. It's identical to HashEQ.
func Hash(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldHash, v))
}

// Func applies equality check predicate on the "func" field. It's identical to FuncEQ.
func Func(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldFunc, v))
}

// FromAddress applies equality check predicate on the "from_address" field. It's identical to FromAddressEQ.
func FromAddress(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldFromAddress, v))
}

// ToAddress applies equality check predicate on the "to_address" field. It's identical to ToAddressEQ.
func ToAddress(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldToAddress, v))
}

// Token applies equality check predicate on the "token" field. It's identical to TokenEQ.
func Token(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldToken, v))
}

// Amount applies equality check predicate on the "amount" field. It's identical to AmountEQ.
func Amount(v float64) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldAmount, v))
}

// Denom applies equality check predicate on the "denom" field. It's identical to DenomEQ.
func Denom(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldDenom, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldCreatedAt, v))
}

// HashEQ applies the EQ predicate on the "hash" field.
func HashEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldHash, v))
}

// HashNEQ applies the NEQ predicate on the "hash" field.
func HashNEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldHash, v))
}

// HashIn applies the In predicate on the "hash" field.
func HashIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldHash, vs...))
}

// HashNotIn applies the NotIn predicate on the "hash" field.
func HashNotIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldHash, vs...))
}

// HashGT applies the GT predicate on the "hash" field.
func HashGT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldHash, v))
}

// HashGTE applies the GTE predicate on the "hash" field.
func HashGTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldHash, v))
}

// HashLT applies the LT predicate on the "hash" field.
func HashLT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldHash, v))
}

// HashLTE applies the LTE predicate on the "hash" field.
func HashLTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldHash, v))
}

// HashContains applies the Contains predicate on the "hash" field.
func HashContains(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContains(FieldHash, v))
}

// HashHasPrefix applies the HasPrefix predicate on the "hash" field.
func HashHasPrefix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasPrefix(FieldHash, v))
}

// HashHasSuffix applies the HasSuffix predicate on the "hash" field.
func HashHasSuffix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasSuffix(FieldHash, v))
}

// HashEqualFold applies the EqualFold predicate on the "hash" field.
func HashEqualFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEqualFold(FieldHash, v))
}

// HashContainsFold applies the ContainsFold predicate on the "hash" field.
func HashContainsFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContainsFold(FieldHash, v))
}

// FuncEQ applies the EQ predicate on the "func" field.
func FuncEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldFunc, v))
}

// FuncNEQ applies the NEQ predicate on the "func" field.
func FuncNEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldFunc, v))
}

// FuncIn applies the In predicate on the "func" field.
func FuncIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldFunc, vs...))
}

// FuncNotIn applies the NotIn predicate on the "func" field.
func FuncNotIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldFunc, vs...))
}

// FuncGT applies the GT predicate on the "func" field.
func FuncGT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldFunc, v))
}

// FuncGTE applies the GTE predicate on the "func" field.
func FuncGTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldFunc, v))
}

// FuncLT applies the LT predicate on the "func" field.
func FuncLT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldFunc, v))
}

// FuncLTE applies the LTE predicate on the "func" field.
func FuncLTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldFunc, v))
}

// FuncContains applies the Contains predicate on the "func" field.
func FuncContains(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContains(FieldFunc, v))
}

// FuncHasPrefix applies the HasPrefix predicate on the "func" field.
func FuncHasPrefix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasPrefix(FieldFunc, v))
}

// FuncHasSuffix applies the HasSuffix predicate on the "func" field.
func FuncHasSuffix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasSuffix(FieldFunc, v))
}

// FuncEqualFold applies the EqualFold predicate on the "func" field.
func FuncEqualFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEqualFold(FieldFunc, v))
}

// FuncContainsFold applies the ContainsFold predicate on the "func" field.
func FuncContainsFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContainsFold(FieldFunc, v))
}

// FromAddressEQ applies the EQ predicate on the "from_address" field.
func FromAddressEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldFromAddress, v))
}

// FromAddressNEQ applies the NEQ predicate on the "from_address" field.
func FromAddressNEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldFromAddress, v))
}

// FromAddressIn applies the In predicate on the "from_address" field.
func FromAddressIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldFromAddress, vs...))
}

// FromAddressNotIn applies the NotIn predicate on the "from_address" field.
func FromAddressNotIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldFromAddress, vs...))
}

// FromAddressGT applies the GT predicate on the "from_address" field.
func FromAddressGT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldFromAddress, v))
}

// FromAddressGTE applies the GTE predicate on the "from_address" field.
func FromAddressGTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldFromAddress, v))
}

// FromAddressLT applies the LT predicate on the "from_address" field.
func FromAddressLT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldFromAddress, v))
}

// FromAddressLTE applies the LTE predicate on the "from_address" field.
func FromAddressLTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldFromAddress, v))
}

// FromAddressContains applies the Contains predicate on the "from_address" field.
func FromAddressContains(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContains(FieldFromAddress, v))
}

// FromAddressHasPrefix applies the HasPrefix predicate on the "from_address" field.
func FromAddressHasPrefix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasPrefix(FieldFromAddress, v))
}

// FromAddressHasSuffix applies the HasSuffix predicate on the "from_address" field.
func FromAddressHasSuffix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasSuffix(FieldFromAddress, v))
}

// FromAddressIsNil applies the IsNil predicate on the "from_address" field.
func FromAddressIsNil() predicate.Transfer {
	return predicate.Transfer(sql.FieldIsNull(FieldFromAddress))
}

// FromAddressNotNil applies the NotNil predicate on the "from_address" field.
func FromAddressNotNil() predicate.Transfer {
	return predicate.Transfer(sql.FieldNotNull(FieldFromAddress))
}

// FromAddressEqualFold applies the EqualFold predicate on the "from_address" field.
func FromAddressEqualFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEqualFold(FieldFromAddress, v))
}

// FromAddressContainsFold applies the ContainsFold predicate on the "from_address" field.
func FromAddressContainsFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContainsFold(FieldFromAddress, v))
}

// ToAddressEQ applies the EQ predicate on the "to_address" field.
func ToAddressEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldToAddress, v))
}

// ToAddressNEQ applies the NEQ predicate on the "to_address" field.
func ToAddressNEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldToAddress, v))
}

// ToAddressIn applies the In predicate on the "to_address" field.
func ToAddressIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldToAddress, vs...))
}

// ToAddressNotIn applies the NotIn predicate on the "to_address" field.
func ToAddressNotIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldToAddress, vs...))
}

// ToAddressGT applies the GT predicate on the "to_address" field.
func ToAddressGT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldToAddress, v))
}

// ToAddressGTE applies the GTE predicate on the "to_address" field.
func ToAddressGTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldToAddress, v))
}

// ToAddressLT applies the LT predicate on the "to_address" field.
func ToAddressLT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldToAddress, v))
}

// ToAddressLTE applies the LTE predicate on the "to_address" field.
func ToAddressLTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldToAddress, v))
}

// ToAddressContains applies the Contains predicate on the "to_address" field.
func ToAddressContains(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContains(FieldToAddress, v))
}

// ToAddressHasPrefix applies the HasPrefix predicate on the "to_address" field.
func ToAddressHasPrefix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasPrefix(FieldToAddress, v))
}

// ToAddressHasSuffix applies the HasSuffix predicate on the "to_address" field.
func ToAddressHasSuffix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasSuffix(FieldToAddress, v))
}

// ToAddressIsNil applies the IsNil predicate on the "to_address" field.
func ToAddressIsNil() predicate.Transfer {
	return predicate.Transfer(sql.FieldIsNull(FieldToAddress))
}

// ToAddressNotNil applies the NotNil predicate on the "to_address" field.
func ToAddressNotNil() predicate.Transfer {
	return predicate.Transfer(sql.FieldNotNull(FieldToAddress))
}

// ToAddressEqualFold applies the EqualFold predicate on the "to_address" field.
func ToAddressEqualFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEqualFold(FieldToAddress, v))
}

// ToAddressContainsFold applies the ContainsFold predicate on the "to_address" field.
func ToAddressContainsFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContainsFold(FieldToAddress, v))
}

// TokenEQ applies the EQ predicate on the "token" field.
func TokenEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldToken, v))
}

// TokenNEQ applies the NEQ predicate on the "token" field.
func TokenNEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldToken, v))
}

// TokenIn applies the In predicate on the "token" field.
func TokenIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldToken, vs...))
}

// TokenNotIn applies the NotIn predicate on the "token" field.
func TokenNotIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldToken, vs...))
}

// TokenGT applies the GT predicate on the "token" field.
func TokenGT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldToken, v))
}

// TokenGTE applies the GTE predicate on the "token" field.
func TokenGTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldToken, v))
}

// TokenLT applies the LT predicate on the "token" field.
func TokenLT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldToken, v))
}

// TokenLTE applies the LTE predicate on the "token" field.
func TokenLTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldToken, v))
}

// TokenContains applies the Contains predicate on the "token" field.
func TokenContains(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContains(FieldToken, v))
}

// TokenHasPrefix applies the HasPrefix predicate on the "token" field.
func TokenHasPrefix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasPrefix(FieldToken, v))
}

// TokenHasSuffix applies the HasSuffix predicate on the "token" field.
func TokenHasSuffix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasSuffix(FieldToken, v))
}

// TokenEqualFold applies the EqualFold predicate on the "token" field.
func TokenEqualFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEqualFold(FieldToken, v))
}

// TokenContainsFold applies the ContainsFold predicate on the "token" field.
func TokenContainsFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContainsFold(FieldToken, v))
}

// AmountEQ applies the EQ predicate on the "amount" field.
func AmountEQ(v float64) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldAmount, v))
}

// AmountNEQ applies the NEQ predicate on the "amount" field.
func AmountNEQ(v float64) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldAmount, v))
}

// AmountIn applies the In predicate on the "amount" field.
func AmountIn(vs ...float64) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldAmount, vs...))
}

// AmountNotIn applies the NotIn predicate on the "amount" field.
func AmountNotIn(vs ...float64) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldAmount, vs...))
}

// AmountGT applies the GT predicate on the "amount" field.
func AmountGT(v float64) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldAmount, v))
}

// AmountGTE applies the GTE predicate on the "amount" field.
func AmountGTE(v float64) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldAmount, v))
}

// AmountLT applies the LT predicate on the "amount" field.
func AmountLT(v float64) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldAmount, v))
}

// AmountLTE applies the LTE predicate on the "amount" field.
func AmountLTE(v float64) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldAmount, v))
}

// DenomEQ applies the EQ predicate on the "denom" field.
func DenomEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldDenom, v))
}

// DenomNEQ applies the NEQ predicate on the "denom" field.
func DenomNEQ(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldDenom, v))
}

// DenomIn applies the In predicate on the "denom" field.
func DenomIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldDenom, vs...))
}

// DenomNotIn applies the NotIn predicate on the "denom" field.
func DenomNotIn(vs ...string) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldDenom, vs...))
}

// DenomGT applies the GT predicate on the "denom" field.
func DenomGT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldDenom, v))
}

// DenomGTE applies the GTE predicate on the "denom" field.
func DenomGTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldDenom, v))
}

// DenomLT applies the LT predicate on the "denom" field.
func DenomLT(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldDenom, v))
}

// DenomLTE applies the LTE predicate on the "denom" field.
func DenomLTE(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldDenom, v))
}

// DenomContains applies the Contains predicate on the "denom" field.
func DenomContains(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContains(FieldDenom, v))
}

// DenomHasPrefix applies the HasPrefix predicate on the "denom" field.
func DenomHasPrefix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasPrefix(FieldDenom, v))
}

// DenomHasSuffix applies the HasSuffix predicate on the "denom" field.
func DenomHasSuffix(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldHasSuffix(FieldDenom, v))
}

// DenomEqualFold applies the EqualFold predicate on the "denom" field.
func DenomEqualFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldEqualFold(FieldDenom, v))
}

// DenomContainsFold applies the ContainsFold predicate on the "denom" field.
func DenomContainsFold(v string) predicate.Transfer {
	return predicate.Transfer(sql.FieldContainsFold(FieldDenom, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Transfer {
	return predicate.Transfer(sql.FieldLTE(FieldCreatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Transfer) predicate.Transfer {
	return predicate.Transfer(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Transfer) predicate.Transfer {
	return predicate.Transfer(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Transfer) predicate.Transfer {
	return predicate.Transfer(sql.NotPredicates(p))
}
