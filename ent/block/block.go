// Code generated by ent, DO NOT EDIT.

package block

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the block type in the database.
	Label = "block"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldHash holds the string denoting the hash field in the database.
	FieldHash = "hash"
	// FieldHeight holds the string denoting the height field in the database.
	FieldHeight = "height"
	// FieldTime holds the string denoting the time field in the database.
	FieldTime = "time"
	// FieldTotalTxs holds the string denoting the total_txs field in the database.
	FieldTotalTxs = "total_txs"
	// FieldNumTxs holds the string denoting the num_txs field in the database.
	FieldNumTxs = "num_txs"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// Table holds the table name of the block in the database.
	Table = "blocks"
)

// Columns holds all SQL columns for block fields.
var Columns = []string{
	FieldID,
	FieldHash,
	FieldHeight,
	FieldTime,
	FieldTotalTxs,
	FieldNumTxs,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// HashValidator is a validator for the "hash" field. It is called by the builders before save.
	HashValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)

// OrderOption defines the ordering options for the Block queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByHash orders the results by the hash field.
func ByHash(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldHash, opts...).ToFunc()
}

// ByHeight orders the results by the height field.
func ByHeight(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldHeight, opts...).ToFunc()
}

// ByTime orders the results by the time field.
func ByTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTime, opts...).ToFunc()
}

// ByTotalTxs orders the results by the total_txs field.
func ByTotalTxs(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTotalTxs, opts...).ToFunc()
}

// ByNumTxs orders the results by the num_txs field.
func ByNumTxs(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldNumTxs, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}
